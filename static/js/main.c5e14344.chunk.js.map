{"version":3,"sources":["classes/ColorCalculator.js","components/StyledComponents.js","components/Header.js","components/Navbar.js","components/Controller/DefaultTheme.js","components/Controller/ThemeListEditor.js","components/Controller/ColorScheme.js","components/Controller/ChooseColor.js","components/Controller/ColorSwatchDisplay.js","components/Controller/Controller.js","components/Aside.js","components/Post.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeColors","hexColor","invert","rgb","hexTorgb","this","colors","theme","highlight","adjustLuminosity","shadow1","shadow2","faded","adjustSaturation","parseInt","slice","scale","c","map","colorVal","newColor","Math","round","min","max","toString","length","join","hex","getTextColor","FullContainer","styled","div","attrs","props","style","background","bgColor","area","FlexRow","Header","StyledHeader","header","h1","color","Navbar","StyledNavbar","textColor","NavItem","hover","active","href","ul","li","defaultTheme","themeName","validate","require","schema","validateStorage","localStorage","themes","console","log","setItem","JSON","stringify","parse","required","valid","ThemeListEditor","selectInputRef","useRef","useState","setThemeName","themeNameList","setThemeNameList","value","className","onChange","e","target","type","placeholder","onClick","getItem","some","element","alert","push","prevThemeList","changeHeader","ref","themeToLoad","find","elem","current","loadTheme","filteredThemes","filter","ColorScheme","Fragment","id","name","defaultChecked","htmlFor","ChooseColor","ColorSwatch","span","ColorSwatchDisplay","Controller","themeListEditor","Storage","onColorChange","onHeaderChange","colorScheme","setColorScheme","useEffect","newTheme","StyledForm","onSubmit","preventDefault","form","Aside","StyledAside","aside","Post","StyledPost","StyledTextBlock","borderLeft","Footer","StyledFooter","footer","GlobalStyle","createGlobalStyle","MainContainer","App","setColors","setHeader","newHeader","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5e14344.chunk.js","sourcesContent":["export default class ThemeColors {\r\n  constructor(hexColor, invert) {\r\n    const rgb = hexTorgb(hexColor);\r\n    this.colors = {\r\n      theme: hexColor,\r\n      highlight: adjustLuminosity(rgb, 0.85),\r\n      shadow1: adjustLuminosity(rgb, -0.25),\r\n      shadow2: invert\r\n        ? adjustLuminosity(rgb, -0.25, invert)\r\n        : adjustLuminosity(rgb, -0.65),\r\n      faded: adjustSaturation(rgb, 0.5, invert),\r\n    };\r\n  }\r\n}\r\n\r\nfunction hexTorgb(hexColor) {\r\n  let r = parseInt(hexColor.slice(1, 3), 16);\r\n  let g = parseInt(hexColor.slice(3, 5), 16);\r\n  let b = parseInt(hexColor.slice(5), 16);\r\n  return [r, g, b];\r\n}\r\n\r\nfunction adjustLuminosity(rgb, scale, invert = false) {\r\n  let c;\r\n  if (invert) {\r\n    rgb = rgb.map((colorVal) => 255 - colorVal);\r\n  }\r\n  const newColor = rgb.map((colorVal) => {\r\n    c = Math.round(\r\n      Math.min(Math.max(0, colorVal + colorVal * scale), 255)\r\n    ).toString(16);\r\n    if (c.length < 2) {\r\n      return \"0\" + c;\r\n    } else {\r\n      return c;\r\n    }\r\n  });\r\n  return \"#\" + newColor.join(\"\");\r\n}\r\n\r\nfunction adjustSaturation(rgb, scale, invert = false) {\r\n  let hex;\r\n  if (invert) {\r\n    rgb = rgb.map((colorVal) => 255 - colorVal);\r\n  }\r\n  const max = Math.max(...rgb);\r\n  const newColor = rgb.map((colorVal) => {\r\n    if (max === colorVal) {\r\n      hex = colorVal.toString(16);\r\n    } else {\r\n      hex = Math.round(colorVal + (max - colorVal) * scale).toString(16);\r\n    }\r\n    return hex.length < 2 ? \"0\" + hex : hex;\r\n  });\r\n  return \"#\" + newColor.join(\"\");\r\n}\r\n\r\nexport function getTextColor(hexColor) {\r\n  const [r, g, b] = hexTorgb(hexColor);\r\n  return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? \"#000000\" : \"#FFFFFF\";\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const FullContainer = styled.div.attrs((props) => ({\r\n  style: {\r\n    background: props.bgColor,\r\n  },\r\n}))`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  grid-area: ${(props) => props.area};\r\n`;\r\n\r\nexport const FlexRow = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: nowrap row;\r\n  justify-content: space-evenly;\r\n\r\n  * {\r\n    flex-basis: 100%;\r\n  }\r\n`;\r\nexport const FlexColumn = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: nowrap column;\r\n  justify-content: center;\r\n\r\n  * {\r\n    flex-basis: 100%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getTextColor } from \"../classes/ColorCalculator\";\r\nimport { FullContainer } from \"./StyledComponents\";\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <FullContainer bgColor={props.colors.theme} area=\"header\">\r\n      <StyledHeader colors={props.colors}>{props.header}</StyledHeader>\r\n    </FullContainer>\r\n  );\r\n}\r\n//=============STYLED COMPONENTS============\r\nconst StyledHeader = styled.h1.attrs((props) => ({\r\n  style: {\r\n    color: getTextColor(props.colors.theme),\r\n  },\r\n}))`\r\n  margin: 0 auto;\r\n  padding: 0.5rem 1rem;\r\n  display: block;\r\n  align-self: flex-end;\r\n  width: max(90%, 35rem);\r\n  text-align: center;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getTextColor } from \"../classes/ColorCalculator\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <StyledNavbar\r\n      textColor={props.colors.textColor}\r\n      bgColor={props.colors.shadow2}\r\n      area=\"nav\"\r\n    >\r\n      <NavItem hover={props.colors.shadow1} active={props.colors.highlight}>\r\n        <a href=\"https://github.com/johnrdoty92/react-theme-saver\">Github Repo</a>\r\n      </NavItem>\r\n      <NavItem hover={props.colors.shadow1} active={props.colors.highlight}>\r\n        <a href=\"mailto:johnrdoty92@gmail.com\">Contact</a>\r\n      </NavItem>\r\n    </StyledNavbar>\r\n  );\r\n}\r\n\r\n//=============STYLED COMPONENTS============\r\nconst StyledNavbar = styled.ul.attrs((props) => ({\r\n  style: {\r\n    background: props.bgColor,\r\n    color: getTextColor(props.bgColor),\r\n  },\r\n}))`\r\n  display: flex;\r\n  flex-flow: row;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  grid-area: nav;\r\n  margin: 0;\r\n  padding-right: 1em;\r\n  box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.1);\r\n  position: sticky;\r\n  top: 0;\r\n`;\r\n\r\nconst NavItem = styled.li`\r\n  display: block;\r\n  height: 100%;\r\n  line-height: 2em;\r\n  a {\r\n    padding: 0 1em;\r\n    display: block;\r\n    height: 100%;\r\n    width: 100%;\r\n    color: inherit;\r\n    text-decoration: none;\r\n    transition: 0.25s ease;\r\n  }\r\n  a:hover {\r\n    color: white;\r\n    background: rgba(0, 0, 0, 0.25);\r\n  }\r\n  a:active {\r\n    color: black;\r\n    background: rgba(255, 255, 255, 0.25);\r\n  }\r\n`;","const defaultTheme = [\r\n  {\r\n    themeName: \"Default Theme\",\r\n    colors: {\r\n      theme: \"#878787\",\r\n      highlight: \"#ececec\",\r\n      shadow1: \"#222222\",\r\n      shadow2: \"#656565\",\r\n      faded: \"#878787\",\r\n    },\r\n  },\r\n];\r\n\r\nexport default defaultTheme;\r\n","import { useRef, useState } from \"react\";\r\nimport { FlexRow } from \"../StyledComponents\";\r\nimport defaultTheme from \"./DefaultTheme\";\r\nconst validate = require(\"jsonschema\").validate;\r\nconst schema = require(\"./ThemeColorsSchema.json\");\r\n\r\n//Checks for invalid data stored in localStorage.themes\r\nfunction validateStorage() {\r\n  if (!localStorage?.themes) {\r\n    console.log(\"Creating default theme...\");\r\n    localStorage.setItem(\"themes\", JSON.stringify(defaultTheme));\r\n  }\r\n  const themesAreValid = validate(JSON.parse(localStorage.themes), schema, {\r\n    required: true,\r\n  }).valid;\r\n  if (!themesAreValid) {\r\n    console.log(\"Reverting back to default...\");\r\n    localStorage.setItem(\"themes\", JSON.stringify(defaultTheme));\r\n  }\r\n}\r\nconst ThemeListEditor = (props) => {\r\n  validateStorage();\r\n  const selectInputRef = useRef();\r\n  const [themeName, setThemeName] = useState(\"\");\r\n  const [themeNameList, setThemeNameList] = useState(\r\n    JSON.parse(localStorage.themes).map((theme) => theme.themeName)\r\n  );\r\n  const themes = themeNameList.map((theme) => {\r\n    return (\r\n      <option key={theme} value={theme}>\r\n        {theme}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  function handleSaveTheme() {\r\n    validateStorage();\r\n    const themes = JSON.parse(localStorage.getItem(\"themes\"));\r\n    //Checks if theme name already exists\r\n    if (themes.some((element) => element.themeName === themeName)) {\r\n      alert(\"A theme with that name already exists\");\r\n      return;\r\n    }\r\n    //Theme name is unique, pass it to App to use for header and add theme to localStorage\r\n    themes.push({ themeName: themeName, colors: props.colors });\r\n    localStorage.setItem(\"themes\", JSON.stringify(themes));\r\n    setThemeNameList((prevThemeList) => [...prevThemeList, themeName]);\r\n    //Change the header to the theme name\r\n    props.changeHeader(themeName);\r\n    alert(`${themeName} was successfuly saved into local storage!`);\r\n    setThemeName(\"\");\r\n  }\r\n\r\n  function handleLoadTheme() {\r\n    validateStorage();\r\n    const localThemes = JSON.parse(localStorage.getItem(\"themes\"));\r\n    const themeToLoad = localThemes.find((elem) => {\r\n      return elem.themeName === selectInputRef.current.value;\r\n    });\r\n    if (themeToLoad) {\r\n      props.loadTheme(themeToLoad.colors);\r\n      props.changeHeader(themeToLoad.themeName);\r\n      return;\r\n    }\r\n    alert(\"Something went wrong. Please refresh and try again\");\r\n  }\r\n\r\n  function handleDeleteTheme() {\r\n    validateStorage();\r\n    //Prevent deletion of Default Theme\r\n    if (selectInputRef.current.value === \"Default Theme\") {\r\n      alert(\"Default cannot be deleted\");\r\n      return;\r\n    }\r\n    //Remove the theme to delete\r\n    const filteredThemes = JSON.parse(localStorage.getItem(\"themes\")).filter(\r\n      (theme) => {\r\n        return theme.themeName !== selectInputRef.current.value;\r\n      }\r\n    );\r\n    //Update localStorage and themeNameList for select input\r\n    localStorage.setItem(\"themes\", JSON.stringify(filteredThemes));\r\n    setThemeNameList(filteredThemes.map((theme) => theme.themeName));\r\n    alert(`\"${selectInputRef.current.value}\" was deleted!`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"save-load-delete\">\r\n      <h4>4. Save themes:</h4>\r\n      <div className=\"submit-area\">\r\n        <input\r\n          required\r\n          onChange={(e) => setThemeName(e.target.value)}\r\n          value={themeName}\r\n          type=\"text\"\r\n          placeholder=\"Name your preset\"\r\n        ></input>\r\n        <button type=\"button\" onClick={handleSaveTheme}>\r\n          Save Preset\r\n        </button>\r\n      </div>\r\n      <h4>5. Load or delete themes:</h4>\r\n      <FlexRow>\r\n        <select ref={selectInputRef}>{themes}</select>\r\n        <button type=\"button\" onClick={handleLoadTheme}>\r\n          Load\r\n        </button>\r\n        <button type=\"button\" onClick={handleDeleteTheme}>\r\n          Delete\r\n        </button>\r\n      </FlexRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeListEditor;\r\n","import React from \"react\";\r\n\r\nconst ColorScheme = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h4>1. Choose a color scheme:</h4>\r\n      <div className=\"radio-button\">\r\n        <input\r\n          onChange={props.onChange}\r\n          id=\"SingleTone\"\r\n          type=\"radio\"\r\n          value=\"SingleTone\"\r\n          name=\"type\"\r\n          defaultChecked\r\n        />\r\n        <label htmlFor=\"SingleTone\">Single Tone</label>\r\n      </div>\r\n      <div className=\"radio-button\">\r\n        <input\r\n          onChange={props.onChange}\r\n          id=\"Complementary\"\r\n          type=\"radio\"\r\n          value=\"Complementary\"\r\n          name=\"type\"\r\n        />\r\n        <label htmlFor=\"Complementary\">Complementary</label>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ColorScheme;\r\n","import React from \"react\";\r\n\r\nconst ChooseColor = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h4>2. Choose a color:</h4>\r\n      <input type=\"color\" onChange={props.onChange} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChooseColor;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst ColorSwatchDisplay = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h4>3. Copy your colors:</h4>\r\n      <p>\r\n        Highlight: {props.colors.highlight}\r\n        <ColorSwatch color={props.colors.highlight} />\r\n      </p>\r\n      <p>\r\n        Theme: {props.colors.theme}\r\n        <ColorSwatch color={props.colors.theme} />\r\n      </p>\r\n      <p>\r\n        Dark: {props.colors.shadow1}\r\n        <ColorSwatch color={props.colors.shadow1} />\r\n      </p>\r\n      <p>\r\n        Darker: {props.colors.shadow2}\r\n        <ColorSwatch color={props.colors.shadow2} />\r\n      </p>\r\n      <p>\r\n        Faded: {props.colors.faded}\r\n        <ColorSwatch color={props.colors.faded} />\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport const ColorSwatch = styled.span.attrs((props) => ({\r\n  style: {\r\n    background: props.color,\r\n  },\r\n}))`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  width: 1.1em;\r\n  height: 1.1em;\r\n  margin-left: 8px;\r\n  border: 1px solid black;\r\n  box-shadow: 2px 2px black;\r\n`;\r\n\r\nexport default ColorSwatchDisplay;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getTextColor } from \"../../classes/ColorCalculator\";\r\nimport { FullContainer } from \"../StyledComponents\";\r\nimport ThemeColors from \"../../classes/ColorCalculator\";\r\nimport ThemeListEditor from \"./ThemeListEditor\";\r\nimport ColorScheme from \"./ColorScheme\";\r\nimport ChooseColor from \"./ChooseColor\";\r\nimport ColorSwatchDisplay from \"./ColorSwatchDisplay\";\r\n\r\nconst Controller = (props) => {\r\n  const themeListEditor =\r\n    typeof Storage !== \"undefined\" ? (\r\n      <ThemeListEditor\r\n        colors={props.colors}\r\n        header={props.header}\r\n        loadTheme={handleLoadColors}\r\n        changeHeader={props.onHeaderChange}\r\n      />\r\n    ) : (\r\n      <p>Sorry, your browser does not support localStorage</p>\r\n    );\r\n\r\n  //=======STATE VARIABLES=======\r\n  const [colorScheme, setColorScheme] = useState(\"SingleTone\");\r\n\r\n  //=======HANDLE CHANGES IN COLOR=======\r\n  useEffect(() => {\r\n    const invert = colorScheme === \"Complementary\";\r\n    const newTheme = new ThemeColors(props.colors.theme, invert);\r\n    props.onColorChange(newTheme.colors);\r\n  }, [colorScheme]);\r\n  function handleChooseColor(e) {\r\n    const invert = colorScheme === \"Complementary\";\r\n    const newTheme = new ThemeColors(e.target.value, invert);\r\n    props.onColorChange(newTheme.colors);\r\n  }\r\n  function handleChooseScheme(e) {\r\n    setColorScheme(e.target.value);\r\n  }\r\n  function handleLoadColors(colors) {\r\n    props.onColorChange(colors);\r\n  }\r\n\r\n  return (\r\n    <FullContainer area=\"controller\">\r\n      <StyledForm\r\n        colors={props.colors}\r\n        name=\"controller\"\r\n        onSubmit={(e) => e.preventDefault()}\r\n      >\r\n        <ColorScheme onChange={handleChooseScheme} />\r\n        <ChooseColor onChange={handleChooseColor} />\r\n        <ColorSwatchDisplay colors={props.colors} />\r\n        {themeListEditor}\r\n      </StyledForm>\r\n    </FullContainer>\r\n  );\r\n};\r\nexport default Controller;\r\n\r\n//=============STYLED COMPONENTS============\r\nconst StyledForm = styled.form.attrs((props) => ({\r\n  style: {\r\n    background: props.colors.faded,\r\n    color: getTextColor(props.colors.faded),\r\n  },\r\n}))`\r\n  width: 90%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-flow: column nowrap;\r\n  padding: 1rem;\r\n  border-radius: 5px;\r\n  box-shadow: 3px 3px 5px 2px rgba(0, 0, 0, 0.1);\r\n  margin: 1.5rem 1.5rem 0 1.5rem;\r\n\r\n  & * {\r\n    margin: 0.2rem 0;\r\n  }\r\n  .radio-button {\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    align-items: center;\r\n  }\r\n  .submit-area {\r\n    display: flex;\r\n\r\n    input {\r\n      border-radius: 5px 0px 0px 5px;\r\n      border: 1px solid black;\r\n      padding: 5px;\r\n    }\r\n    button {\r\n      border-radius: 0px 5px 5px 0px;\r\n      border: 1px solid black;\r\n      transition: all 0.2s;\r\n      color: white;\r\n      background: rgba(0, 0, 0, 0.5);\r\n      &:hover {\r\n        background: white;\r\n        color: black;\r\n      }\r\n      &:active {\r\n        background: grey;\r\n      }\r\n    }\r\n  }\r\n  .save-load-delete {\r\n    display: flex;\r\n    flex-flow: column;\r\n    align-items: center;\r\n  }\r\n  h4 {\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    padding: 5px;\r\n    width: 95%;\r\n    border-radius: 5px;\r\n    background: rgba(0, 0, 0, 0.3);\r\n  }\r\n  input[type=\"color\"] {\r\n    width: 80%;\r\n    min-height: 35px;\r\n  }\r\n  select {\r\n    border-radius: 5px 0px 0px 5px;\r\n    padding: 5px;\r\n  }\r\n  button[type=\"button\"] {\r\n    padding: 5px;\r\n    border: 1px solid black;\r\n    transition: all 0.2s;\r\n    color: white;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    &:hover {\r\n      background: white;\r\n      color: black;\r\n    }\r\n    &:active {\r\n      background: grey;\r\n    }\r\n    &:last-child {\r\n      border-radius: 0px 5px 5px 0px;\r\n    }\r\n  }\r\n`;","import styled from \"styled-components\";\r\nimport { getTextColor } from \"../classes/ColorCalculator\";\r\nimport { FullContainer } from \"./StyledComponents\";\r\n\r\nconst Aside = (props) => {\r\n  return (\r\n    <FullContainer area=\"aside\">\r\n      <StyledAside colors={props.colors}>\r\n        <div>\r\n          <h2>Blog Post #1</h2>\r\n          <p>Sample Text</p>\r\n        </div>\r\n        <hr />\r\n        <div>\r\n          <h2>Blog Post #2</h2>\r\n          <p>Sample Text</p>\r\n        </div>\r\n      </StyledAside>\r\n    </FullContainer>\r\n  );\r\n};\r\nexport default Aside;\r\n\r\n//=============STYLED COMPONENTS============\r\nconst StyledAside = styled.aside.attrs((props) => ({\r\n  style: {\r\n    background: props.colors.faded,\r\n    color: getTextColor(props.colors.faded),\r\n  },\r\n}))`\r\n  width: 90%;\r\n  padding: 1rem;\r\n  border-radius: 5px;\r\n  box-shadow: 3px 3px 5px 2px rgba(0, 0, 0, 0.1);\r\n  margin: 1rem 1.5rem 1.5rem 1.5rem;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { getTextColor } from \"../classes/ColorCalculator\";\r\nimport { FullContainer } from \"./StyledComponents\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <FullContainer area=\"post\">\r\n      <StyledPost>\r\n        <h2>Theme Saver</h2>\r\n        <p>\r\n          Welcome! This simple web app is for anyone who is deciding on a color\r\n          theme for their website. Watch the page update automatically as you\r\n          choose colors!\r\n        </p>\r\n        <StyledTextBlock colors={props.colors}>\r\n          <p>\r\n            If you find a theme that you like, you can copy and paste the color\r\n            values or save them under a new name.\r\n          </p>\r\n        </StyledTextBlock>\r\n\r\n        <h2>Easily Visualize Colors</h2>\r\n        <StyledTextBlock colors={props.colors}>\r\n          <code>\r\n            const greeting = \"Hello World!\";\r\n            <br />\r\n            alert(greeting);\r\n          </code>\r\n        </StyledTextBlock>\r\n        <p>\r\n          Choose either a single tone or complimentary look. This app was\r\n          created with <b>React.js</b> and <b>styled-components</b>. Themes are\r\n          saved with localStorage, so be sure to come back on this device or\r\n          copy and paste the colors elsewhere.\r\n        </p>\r\n      </StyledPost>\r\n    </FullContainer>\r\n  );\r\n};\r\nexport default Post;\r\n\r\n//=============STYLED COMPONENTS============\r\nconst StyledPost = styled.div`\r\n  padding: 1rem;\r\n`;\r\nconst StyledTextBlock = styled.div.attrs((props) => ({\r\n  style: {\r\n    background: props.colors.highlight,\r\n    color: getTextColor(props.colors.highlight),\r\n    borderLeft: `5px solid ${props.colors.shadow2}`,\r\n  },\r\n}))`\r\n  width: 90%;\r\n  margin: auto;\r\n  padding: 1rem;\r\n  border-radius: 5px;\r\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.25);\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { getTextColor } from \"../classes/ColorCalculator\";\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <StyledFooter colors={props.colors} area=\"footer\">\r\n      <h3>Created by John Doty</h3>\r\n    </StyledFooter>\r\n  );\r\n};\r\nexport default Footer;\r\n\r\n//=============STYLED COMPONENTS============\r\nconst StyledFooter = styled.footer.attrs((props) => ({\r\n  style: {\r\n    color: getTextColor(props.colors.theme),\r\n    background: props.colors.theme,\r\n  },\r\n}))`\r\n  margin-top: auto;\r\n  width: 100%;\r\n  grid-area: footer;\r\n  margin-top: 0.5em;\r\n\r\n  * {\r\n    height: 40px;\r\n    line-height: 40px;\r\n    vertical-align: middle;\r\n    text-align: center;\r\n    width: 100%;\r\n    margin: 0;\r\n  }\r\n`;","import React, { useState } from \"react\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport Header from \"./components/Header\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Controller from \"./components/Controller/Controller\";\r\nimport Aside from \"./components/Aside\";\r\nimport Post from \"./components/Post\";\r\nimport Footer from \"./components/Footer\";\r\nimport defaultTheme from \"./components/Controller/DefaultTheme\";\r\n\r\nconst App = () => {\r\n  const [colors, setColors] = useState(defaultTheme[0].colors);\r\n  const [header, setHeader] = useState(defaultTheme[0].themeName);\r\n  \r\n  function handleThemeChange(newTheme) {\r\n    setColors(newTheme);\r\n  }\r\n  function handleHeaderChange(newHeader) {\r\n    console.log(\"Header was changed to\", newHeader);\r\n    setHeader(newHeader);\r\n  }\r\n\r\n  return (\r\n    <MainContainer>\r\n      <GlobalStyle />\r\n      <Header colors={colors} header={header} />\r\n      <Navbar colors={colors} />\r\n      <Controller\r\n        onColorChange={handleThemeChange}\r\n        onHeaderChange={handleHeaderChange}\r\n        colors={colors}\r\n        header={header}\r\n      />\r\n      <Aside colors={colors} />\r\n      <Post colors={colors} />\r\n      <Footer colors={colors} />\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\n//=============STYLED COMPONENTS============\r\nconst GlobalStyle = createGlobalStyle`\r\n* {\r\n    box-sizing: border-box;\r\n}\r\n`;\r\nconst MainContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 3fr;\r\n  grid-template-rows: 4em 2em minmax(31em, 39.5em) minmax(20em, 25em) 3em;\r\n  grid-template-areas:\r\n    \"header header\"\r\n    \"nav nav\"\r\n    \"controller post\"\r\n    \"aside post\"\r\n    \"footer footer\";\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 4em 2em auto auto auto 3em;\r\n    grid-template-areas:\r\n      \"header\"\r\n      \"nav\"\r\n      \"controller\"\r\n      \"post\"\r\n      \"aside\"\r\n      \"footer\";\r\n  } ;\r\n`;\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}