{"version":3,"sources":["classes/ThemeColors.js","components/StyledComponents.js","components/Header.js","components/Navbar.js","components/ThemeListEditor.js","components/Controller.js","components/Aside.js","components/Post.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeColors","hexColor","invert","rgb","hexTorgb","this","colors","theme","highlight","adjustLuminosity","shadow1","shadow2","faded","adjustSaturation","textColor","parseInt","slice","scale","c","map","colorVal","newColor","Math","round","min","max","toString","length","join","hex","getTextColor","GlobalStyle","createGlobalStyle","MainContainer","styled","div","FullContainer","attrs","props","style","background","bgColor","area","StyledHeader","h1","color","StyledNavbar","ul","NavItem","li","StyledAside","aside","StyledForm","form","StyledPost","StyledTextBlock","borderLeft","StyledFooter","footer","ColorSwatch","span","FlexRow","Header","header","Navbar","hover","active","href","ThemeListEditor","themes","themeNames","value","className","required","type","placeholder","onClick","Controller","themesController","Storage","onSubmit","name","id","defaultChecked","htmlFor","onChange","Aside","Post","Footer","App","handleSave","e","a","preventDefault","themeName","target","JSON","parse","localStorage","getItem","some","element","alert","setState","state","concat","push","setItem","stringify","handleLoadAndDelete","loadThemeName","localThemes","loadThemeIndex","findIndex","elem","textContent","themesIndex","newThemes","splice","console","log","handleChange","event","document","forms","controller","elements","selectedColor","defaultTheme","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f113da01.chunk.js","sourcesContent":["export default class ThemeColors {\r\n  constructor(hexColor, invert) {\r\n    const rgb = hexTorgb(hexColor);\r\n    this.colors = {\r\n      theme: hexColor,\r\n      highlight: adjustLuminosity(rgb, 0.85),\r\n      shadow1: adjustLuminosity(rgb, -0.25),\r\n      shadow2: invert\r\n        ? adjustLuminosity(rgb, -0.25, invert)\r\n        : adjustLuminosity(rgb, -0.65),\r\n      faded: adjustSaturation(rgb, 0.5, invert),\r\n      textColor: rgb[0] + rgb[1] + rgb[2] < 400 ? \"white\" : \"black\",\r\n    };\r\n  }\r\n}\r\n\r\nfunction hexTorgb(hexColor) {\r\n  let r = parseInt(hexColor.slice(1, 3), 16);\r\n  let g = parseInt(hexColor.slice(3, 5), 16);\r\n  let b = parseInt(hexColor.slice(5), 16);\r\n  return [r, g, b];\r\n}\r\n\r\nfunction adjustLuminosity(rgb, scale, invert = false) {\r\n  let c;\r\n  if (invert) {\r\n    rgb = rgb.map((colorVal) => 255 - colorVal);\r\n  }\r\n  const newColor = rgb.map((colorVal) => {\r\n    c = Math.round(\r\n      Math.min(Math.max(0, colorVal + colorVal * scale), 255)\r\n    ).toString(16);\r\n    if (c.length < 2) {\r\n      return \"0\" + c;\r\n    } else {\r\n      return c;\r\n    }\r\n  });\r\n  return \"#\" + newColor.join(\"\");\r\n}\r\n\r\nfunction adjustSaturation(rgb, scale, invert = false) {\r\n  let hex;\r\n  if (invert) {\r\n    rgb = rgb.map((colorVal) => 255 - colorVal);\r\n  }\r\n  const max = Math.max(...rgb);\r\n  const newColor = rgb.map((colorVal) => {\r\n    if (max === colorVal) {\r\n      hex = colorVal.toString(16);\r\n    } else {\r\n      hex = Math.round(colorVal + (max - colorVal) * scale).toString(16);\r\n    }\r\n    return hex.length < 2 ? \"0\" + hex : hex;\r\n  });\r\n  return \"#\" + newColor.join(\"\");\r\n}\r\n\r\nexport function getTextColor(hexColor) {\r\n  const [r, g, b] = hexTorgb(hexColor);\r\n  return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? \"#000000\" : \"#FFFFFF\";\r\n}\r\n","import styled from \"styled-components\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { getTextColor } from \"../classes/ThemeColors\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\n* {\r\n    box-sizing: border-box;\r\n}\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 3fr;\r\n  grid-template-rows: 4em 2em minmax(30em, 37em) minmax(20em, 25em) 3em;\r\n  grid-template-areas:\r\n    \"header header\"\r\n    \"nav nav\"\r\n    \"controller post\"\r\n    \"aside post\"\r\n    \"footer footer\";\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 4em 2em auto auto auto 3em;\r\n    grid-template-areas:\r\n      \"header\"\r\n      \"nav\"\r\n      \"controller\"\r\n      \"post\"\r\n      \"aside\"\r\n      \"footer\";\r\n  } ;\r\n`;\r\n\r\nexport const FullContainer = styled.div.attrs((props) => ({\r\n  style: {\r\n    background: props.bgColor,\r\n  },\r\n}))`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  grid-area: ${(props) => props.area};\r\n`;\r\n\r\nexport const StyledHeader = styled.h1.attrs((props) => ({\r\n  style: {\r\n    color: getTextColor(props.colors.theme),\r\n  },\r\n}))`\r\n  margin: 0 auto;\r\n  padding: 0.5rem 1rem;\r\n  display: block;\r\n  align-self: flex-end;\r\n  width: max(90%, 35rem);\r\n  text-align: center;\r\n`;\r\n\r\nexport const StyledNavbar = styled.ul.attrs((props) => ({\r\n  style: {\r\n    background: props.bgColor,\r\n    color: getTextColor(props.bgColor),\r\n  },\r\n}))`\r\n  display: flex;\r\n  flex-flow: row;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  grid-area: nav;\r\n  margin: 0;\r\n  padding-right: 1em;\r\n  box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.1);\r\n  position: sticky;\r\n  top: 0;\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n  display: block;\r\n  height: 100%;\r\n  line-height: 2em;\r\n  a {\r\n    padding: 0 1em;\r\n    display: block;\r\n    height: 100%;\r\n    width: 100%;\r\n    color: inherit;\r\n    text-decoration: none;\r\n    transition: 0.25s ease;\r\n  }\r\n  a:hover {\r\n    color: white;\r\n    background: rgba(0, 0, 0, 0.25);\r\n  }\r\n  a:active {\r\n    color: black;\r\n    background: rgba(255, 255, 255, 0.25);\r\n  }\r\n`;\r\n\r\nexport const StyledAside = styled.aside.attrs((props) => ({\r\n  style: {\r\n    background: props.colors.faded,\r\n    color: getTextColor(props.colors.faded),\r\n  },\r\n}))`\r\n  width: 90%;\r\n  padding: 1rem;\r\n  border-radius: 5px;\r\n  box-shadow: 3px 3px 5px 2px rgba(0, 0, 0, 0.1);\r\n  margin: 1rem 1.5rem 1.5rem 1.5rem;\r\n`;\r\n\r\nexport const StyledForm = styled.form.attrs((props) => ({\r\n  style: {\r\n    background: props.colors.faded,\r\n    color: getTextColor(props.colors.faded),\r\n  },\r\n}))`\r\n  width: 90%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-flow: column nowrap;\r\n  padding: 1rem;\r\n  border-radius: 5px;\r\n  box-shadow: 3px 3px 5px 2px rgba(0, 0, 0, 0.1);\r\n  margin: 1.5rem 1.5rem 0 1.5rem;\r\n\r\n  & * {\r\n    margin: 0.2rem 0;\r\n  }\r\n  .radio-button {\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    align-items: center;\r\n  }\r\n  .submit-area {\r\n    display: flex;\r\n\r\n    input {\r\n      border-radius: 5px 0px 0px 5px;\r\n      border: 1px solid black;\r\n      padding: 5px;\r\n    }\r\n    button {\r\n      border-radius: 0px 5px 5px 0px;\r\n      border: 1px solid black;\r\n      transition: all 0.2s;\r\n      color: white;\r\n      background: rgba(0, 0, 0, 0.5);\r\n      &:hover {\r\n        background: white;\r\n        color: black;\r\n      }\r\n      &:active {\r\n        background: grey;\r\n      }\r\n    }\r\n  }\r\n  .save-load-delete {\r\n    display: flex;\r\n    flex-flow: column;\r\n    align-items: center;\r\n  }\r\n  h4 {\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    padding: 5px;\r\n    width: 95%;\r\n    border-radius: 5px;\r\n    background: rgba(0, 0, 0, 0.3);\r\n  }\r\n  input[type=\"color\"] {\r\n    width: 80%;\r\n    min-height: 35px;\r\n  }\r\n  select {\r\n    border-radius: 5px 0px 0px 5px;\r\n    padding: 5px;\r\n  }\r\n  button[type=\"button\"] {\r\n    padding: 5px;\r\n    border: 1px solid black;\r\n    transition: all 0.2s;\r\n    color: white;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    &:hover {\r\n      background: white;\r\n      color: black;\r\n    }\r\n    &:active {\r\n      background: grey;\r\n    }\r\n    &:last-child {\r\n      border-radius: 0px 5px 5px 0px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledPost = styled.div`\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const StyledTextBlock = styled.div.attrs((props) => ({\r\n  style: {\r\n    background: props.colors.highlight,\r\n    color: getTextColor(props.colors.highlight),\r\n    borderLeft: `5px solid ${props.colors.shadow2}`,\r\n  },\r\n}))`\r\n  width: 90%;\r\n  margin: auto;\r\n  padding: 1rem;\r\n  border-radius: 5px;\r\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nexport const StyledFooter = styled.footer.attrs((props) => ({\r\n  style: {\r\n    color: getTextColor(props.colors.theme),\r\n    background: props.colors.theme,\r\n  },\r\n}))`\r\n  margin-top: auto;\r\n  width: 100%;\r\n  grid-area: footer;\r\n  margin-top: 0.5em;\r\n\r\n  * {\r\n    height: 40px;\r\n    line-height: 40px;\r\n    vertical-align: middle;\r\n    text-align: center;\r\n    width: 100%;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const ColorSwatch = styled.span.attrs((props) => ({\r\n  style: {\r\n    background: props.color,\r\n  },\r\n}))`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  width: 1.1em;\r\n  height: 1.1em;\r\n  margin-left: 8px;\r\n  border: 1px solid black;\r\n  box-shadow: 2px 2px black;\r\n`;\r\n\r\nexport const FlexRow = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: nowrap row;\r\n  justify-content: space-evenly;\r\n\r\n  * {\r\n    flex-basis: 100%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StyledHeader, FullContainer } from \"./StyledComponents\";\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <FullContainer bgColor={props.colors.theme} area=\"header\">\r\n      <StyledHeader colors={props.colors}>{props.header}</StyledHeader>\r\n    </FullContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyledNavbar, NavItem } from \"./StyledComponents\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <StyledNavbar\r\n      textColor={props.colors.textColor}\r\n      bgColor={props.colors.shadow2}\r\n      area=\"nav\"\r\n    >\r\n      <NavItem hover={props.colors.shadow1} active={props.colors.highlight}>\r\n        <a href=\"https://github.com/johnrdoty92/react-theme-saver\">Github Repo</a>\r\n      </NavItem>\r\n      <NavItem hover={props.colors.shadow1} active={props.colors.highlight}>\r\n        <a href=\"mailto:johnrdoty92@gmail.com\">Contact</a>\r\n      </NavItem>\r\n    </StyledNavbar>\r\n  );\r\n}\r\n","import { FlexRow } from \"./StyledComponents\";\r\n\r\nconst ThemeListEditor = (props) => {\r\n  const themes = props.themeNames.map((theme) => {\r\n    return (\r\n      <option key={theme} value={theme}>\r\n        {theme}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"save-load-delete\">\r\n      <h4>4. Save themes:</h4>\r\n      <div className=\"submit-area\">\r\n        <input required type=\"text\" placeholder=\"Name your preset\"></input>\r\n        <button type=\"submit\">Save Preset</button>\r\n      </div>\r\n      <h4>5. Load or delete themes:</h4>\r\n      <FlexRow>\r\n        <select>{themes}</select>\r\n        <button type=\"button\" onClick={props.onClick}>\r\n          Load\r\n        </button>\r\n        <button type=\"button\" onClick={props.onClick}>\r\n          Delete\r\n        </button>\r\n      </FlexRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeListEditor;\r\n","import { FullContainer, StyledForm, ColorSwatch } from \"./StyledComponents\";\r\nimport ThemeListEditor from \"./ThemeListEditor\";\r\n\r\nconst Controller = (props) => {\r\n  const themesController =\r\n    typeof Storage !== \"undefined\" ? (\r\n      <ThemeListEditor onClick={props.onClick} themeNames={props.themeNames} />\r\n    ) : (\r\n      <p>Sorry, your browser does not support localStorage</p>\r\n    );\r\n  return (\r\n    <FullContainer area=\"controller\">\r\n      <StyledForm\r\n        onSubmit={props.onSubmit}\r\n        colors={props.colors}\r\n        name=\"controller\"\r\n      >\r\n        <h4>1. Choose a color scheme:</h4>\r\n        <div className=\"radio-button\">\r\n          <input\r\n            id=\"SingleTone\"\r\n            type=\"radio\"\r\n            value=\"SingleTone\"\r\n            name=\"type\"\r\n            defaultChecked\r\n          />\r\n          <label htmlFor=\"SingleTone\">Single Tone</label>\r\n        </div>\r\n        <div className=\"radio-button\">\r\n          <input\r\n            id=\"Complementary\"\r\n            type=\"radio\"\r\n            value=\"Complementary\"\r\n            name=\"type\"\r\n          />\r\n          <label htmlFor=\"Complementary\">Complementary</label>\r\n        </div>\r\n        <h4>2. Choose a color:</h4>\r\n        <input type=\"color\" onChange={props.onChange} />\r\n        <h4>3. Copy your colors:</h4>\r\n        <p>\r\n          Highlight: {props.colors.highlight}\r\n          <ColorSwatch color={props.colors.highlight} />\r\n        </p>\r\n        <p>\r\n          Theme: {props.colors.theme}\r\n          <ColorSwatch color={props.colors.theme} />\r\n        </p>\r\n        <p>\r\n          Dark: {props.colors.shadow1}\r\n          <ColorSwatch color={props.colors.shadow1} />\r\n        </p>\r\n        <p>\r\n          Darker: {props.colors.shadow2}\r\n          <ColorSwatch color={props.colors.shadow2} />\r\n        </p>\r\n        <p>\r\n          Faded: {props.colors.faded}\r\n          <ColorSwatch color={props.colors.faded} />\r\n        </p>\r\n        {themesController}\r\n      </StyledForm>\r\n    </FullContainer>\r\n  );\r\n};\r\n\r\nexport default Controller;\r\n","import { StyledAside, FullContainer } from \"./StyledComponents\";\r\n\r\nconst Aside = (props) => {\r\n  return (\r\n    <FullContainer area=\"aside\">\r\n      <StyledAside colors={props.colors}>\r\n        <div>\r\n          <h2>Blog Post #1</h2>\r\n          <p>Sample Text</p>\r\n        </div>\r\n        <hr />\r\n        <div>\r\n          <h2>Blog Post #2</h2>\r\n          <p>Sample Text</p>\r\n        </div>\r\n      </StyledAside>\r\n    </FullContainer>\r\n  );\r\n};\r\n\r\nexport default Aside;\r\n","import { StyledTextBlock, StyledPost, FullContainer } from \"./StyledComponents\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <FullContainer area=\"post\">\r\n      <StyledPost>\r\n        <h2>Theme Saver</h2>\r\n        <p>\r\n          Welcome! This simple web app is for anyone who is deciding on a color\r\n          theme for their website. Watch the page update automatically as you\r\n          choose colors!\r\n        </p>\r\n        <StyledTextBlock colors={props.colors}>\r\n          <p>\r\n            If you find a theme that you like, you can copy and paste the color\r\n            values or save them under a new name.\r\n          </p>\r\n        </StyledTextBlock>\r\n\r\n        <h2>Easily Visualize Colors</h2>\r\n        <StyledTextBlock colors={props.colors}>\r\n          <code>\r\n            const greeting = \"Hello World!\";\r\n            <br />\r\n            alert(greeting);\r\n          </code>\r\n        </StyledTextBlock>\r\n        <p>\r\n          Choose either a single tone or complimentary look. This app was\r\n          created with <b>React.js</b> and <b>styled-components</b>. Themes are\r\n          saved with localStorage, so be sure to come back on this device or\r\n          copy and paste the colors elsewhere.\r\n        </p>\r\n      </StyledPost>\r\n    </FullContainer>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { StyledFooter } from \"./StyledComponents\";\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <StyledFooter colors={props.colors} area=\"footer\">\r\n      <h3>Created by John Doty</h3>\r\n    </StyledFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport { MainContainer, GlobalStyle } from \"./components/StyledComponents\";\r\nimport Header from \"./components/Header\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Controller from \"./components/Controller\";\r\nimport Aside from \"./components/Aside\";\r\nimport Post from \"./components/Post\";\r\nimport Footer from \"./components/Footer\";\r\nimport ThemeColors from \"./classes/ThemeColors\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      themeName: \"Default Theme\",\r\n      colors: {\r\n        theme: \"#878787\",\r\n        highlight: \"#ececec\",\r\n        shadow1: \"#222222\",\r\n        shadow2: \"#656565\",\r\n        faded: \"#878787\",\r\n      },\r\n      themes: [\"Default Theme\"],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    //Check browser compatability for localStorage\r\n    if (typeof Storage !== \"undefined\") {\r\n      return;\r\n    }\r\n    //Storage is good, but check if \"themes\" key exists\r\n    if (!localStorage.themes) {\r\n      const defaultTheme = [this.state];\r\n      localStorage.setItem(\"themes\", JSON.stringify(defaultTheme));\r\n    } else {\r\n      const themes = JSON.parse(localStorage.themes).map(\r\n        (theme) => theme.themeName\r\n      );\r\n      this.setState({ themes: themes });\r\n    }\r\n  }\r\n\r\n  handleSave = async (e) => {\r\n    e.preventDefault();\r\n    const themeName = e.target[3].value; //value of user's input text\r\n    const themes = JSON.parse(localStorage.getItem(\"themes\")); //array of all saved themes\r\n\r\n    //Checks if theme name already exists\r\n    if (themes.some((element) => element.themeName === themeName)) {\r\n      alert(\"A theme with that name already exists\");\r\n      return;\r\n    }\r\n    //Theme name is good, so push name into themes array and set state\r\n    await this.setState({\r\n      themeName: themeName,\r\n      themes: this.state.themes.concat([themeName]),\r\n    });\r\n    //And save into localStorage\r\n    themes.push(this.state);\r\n    localStorage.setItem(\"themes\", JSON.stringify(themes));\r\n  };\r\n\r\n  handleLoadAndDelete = (e) => {\r\n    const loadThemeName = e.target.form[5].value; //value from select drop down\r\n    const localThemes = JSON.parse(localStorage.getItem(\"themes\")); //Array of all themes in localStorage\r\n    const loadThemeIndex = localThemes.findIndex((elem) => {\r\n      return elem.themeName === loadThemeName;\r\n    });\r\n\r\n    switch (e.target.textContent) {\r\n      case \"Load\":\r\n        this.setState({\r\n          colors: localThemes[loadThemeIndex].colors,\r\n          themeName: localThemes[loadThemeIndex].themeName,\r\n        });\r\n        break;\r\n\r\n      case \"Delete\":\r\n        //Prevent deletion of Default Theme\r\n        if (localThemes[loadThemeIndex].themeName === \"Default Theme\") {\r\n          alert(\"Default cannot be deleted\");\r\n          break;\r\n        }\r\n        const themesIndex = this.state.themes.findIndex(\r\n          (elem) => elem === localThemes[loadThemeIndex].themeName\r\n        );\r\n        //Remove theme name from state and localStorage\r\n        let newThemes = [...this.state.themes];\r\n        newThemes.splice(themesIndex, 1);\r\n        localThemes.splice(loadThemeIndex, 1);\r\n        localStorage.setItem(\"themes\", JSON.stringify(localThemes));\r\n        this.setState({ themes: newThemes });\r\n        break;\r\n\r\n      default:\r\n        console.log(\"Button says something other than 'Load' or 'Delete'\");\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const invert =\r\n      document.forms.controller.elements[\"type\"].value === \"Complementary\";\r\n    const selectedColor = new ThemeColors(event.target.value, invert);\r\n\r\n    this.setState({\r\n      colors: selectedColor.colors,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { colors } = this.state;\r\n    return (\r\n      <MainContainer>\r\n        <GlobalStyle />\r\n        <Header colors={colors} header={this.state.themeName} />\r\n        <Navbar colors={colors} />\r\n        <Controller\r\n          onSubmit={this.handleSave}\r\n          onChange={this.handleChange}\r\n          onClick={this.handleLoadAndDelete}\r\n          colors={colors}\r\n          themeNames={this.state.themes}\r\n        />\r\n        <Aside colors={colors} />\r\n        <Post colors={colors} />\r\n        <Footer colors={colors} />\r\n      </MainContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}